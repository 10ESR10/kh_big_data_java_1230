SELECT * FROM EMPLOYEES;
--1. EMPLOYEES 테이블에서 KING의 정보를 소문자로 검색하고 사원번호, 성명 담당업무(소문자), 부서번호 출력
SELECT EMPLOYEE_ID, FIRST_NAME || ' '|| LAST_NAME  AS 성명,LOWER(JOB_ID), DEPARTMENT_ID
FROM EMPLOYEES
WHERE LOWER (LAST_NAME) = 'king';

--2. EMPLOYEES 테이블에서 KING의 정보를 대문자로 검색하고 사원번호, 성명 담당업무(대문자), 부서번호 출력
SELECT EMPLOYEE_ID, FIRST_NAME || ' '|| LAST_NAME  AS 성명,UPPER(JOB_ID), DEPARTMENT_ID
FROM EMPLOYEES
WHERE UPPER (LAST_NAME) = 'KING';
--3.DEPARTMENTS 테이블에서 (부서번호와 부서이름), 부서이름과 위치번호를 합하여 출력
SELECT CONCAT(DEPARTMENT_ID, DEPARTMENT_NAME), CONCAT (DEPARTMENT_NAME,LOCATION_ID )
FROM DEPARTMENTS;
--4.EMPLOYEES 테이블에서 이름의 첫 글자가 'K'보다 크고 'Y'보다 적은 사원의 정보를 사원번호, 이름, 업무, 급여, 부서번호를 출력
SELECT EMPLOYEE_ID,  CONCAT (FIRST_NAME, LAST_NAME)AS NAME,SALARY, DEPARTMENT_ID
FROM EMPLOYEES
WHERE SUBSTR(FIRST_NAME, 1, 1) >'K' AND SUBSTR(FIRST_NAME, 1, 1) <'Y'
ORDER BY FIRST_NAME;
--5.EMPLOYEES 테이블에서 20번 부서 중 이름의 길이 및 급여의 자릿수를 사원번호, 이름, 이름의 자릿수, 급여, 급여의 자릿수를 출력
SELECT EMPLOYEE_ID,CONCAT (FIRST_NAME, LAST_NAME)AS NAME,LENGTH(FIRST_NAME),SALARY,
LENGTH (SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 20;
--6.EMPLOYEES 테이블에서 이름 중 'E'의 위치 출력
SELECT FIRST_NAME,INSTR(FIRST_NAME,'e',1)
FROM EMPLOYEES;
--7.EMPLOYEES 테이블에서 부서번호가 80인 사람의 급여를 30으로 나눈 나머지를 구하여 출력
SELECT FIRST_NAME, SALARY, MOD(SALARY,30)
FROM EMPLOYEES;

--8.EMPLOYEES 테이블에서 현재까지 근무일 수가 몇주 몇일 인가를 출력(단 근무 일수가 많은 사람 순으로 출력)
SELECT FIRST_NAME,HIRE_DATE,
TRUNC((SYSDATE-HIRE_DATE)/7) ||'주'||
TRUNC(MOD((SYSDATE - HIRE_DATE),7)) || '일' AS "근무 주/일"
FROM EMPLOYEES
ORDER BY HIRE_DATE;
--9. EMPLOYEES 테이블에서 부서 50에서 급여 앞에 $를 삽입하고 3자리마다 ,를 출력
SELECT FIRST_NAME, SALARY,
TO_CHAR(SALARY, '$999,999'), DEPARTMENT_ID 
FROM EMPLOYEES
WHERE DEPARTMENT_ID =50;






